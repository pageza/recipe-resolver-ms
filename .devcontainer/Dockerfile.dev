#Dockerfile.dev

# Use Ubuntu 22.04 as the base image
FROM ubuntu:22.04

ARG DEBIAN_FRONTEND=noninteractive

# Install required packages: curl, git, ca-certificates, build-essential, gnupg
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    git \
    build-essential \
    gnupg \
    && rm -rf /var/lib/apt/lists/*

# Add Docker's official GPG key and set up the repository
RUN install -m 0755 -d /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    chmod a+r /etc/apt/keyrings/docker.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

# Install Docker and Docker Compose plugin
RUN apt-get update && apt-get install -y \
    docker.io \
    docker-compose-plugin \
    && rm -rf /var/lib/apt/lists/*

# -----------------------------
# Install Go
# -----------------------------
ENV GO_VERSION=1.24.0
RUN curl -fsSL https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz -o go.tar.gz \
    && tar -C /usr/local -xzf go.tar.gz \
    && rm go.tar.gz

# Update PATH to include Go binaries
ENV PATH="/usr/local/go/bin:${PATH}"

# -----------------------------
# Install Protocol Buffers and Go Plugins for gRPC
# -----------------------------
# Install protoc (Protocol Buffers compiler)
RUN apt-get update && apt-get install -y protobuf-compiler && rm -rf /var/lib/apt/lists/*

# Use the absolute path to Go to install the protoc plugins.
RUN /usr/local/go/bin/go install google.golang.org/protobuf/cmd/protoc-gen-go@latest && \
    /usr/local/go/bin/go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

# Copy the installed plugins to /usr/local/bin so they're available to non-root users.
RUN cp /root/go/bin/protoc-gen-go /usr/local/bin/ && \
    cp /root/go/bin/protoc-gen-go-grpc /usr/local/bin/

# -----------------------------
# Set Working Directory
# -----------------------------
RUN mkdir -p /workspace
WORKDIR /workspace

# -----------------------------
# Create a Non-Root User and Setup Permissions
# -----------------------------
ARG USERNAME=vscode
ARG USER_UID=1000
ARG USER_GID=1000
RUN groupadd --gid ${USER_GID} ${USERNAME} \
    && useradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME} \
    && usermod -aG docker ${USERNAME}

# Expose port 8080 (if needed)
EXPOSE 8080

# Switch to non-root user
USER ${USERNAME}

# Default command
CMD ["bash"]
